////////////////////////////////////////////////////////////////////////////////
// Program : Create an XML file of a stock take for a wareehouse that is 
// setup for consignment. 
//=========================================================================//
// Copyright (C) Velocity Global Ltd 2018
//
// PRONTO is a registered trademark of PRONTO Software P/L.
//
// All Rights Reserved. Unauthorized copying is prohibited.
//=========================================================================//
//
// File: so/constkload.spl
//
// Modification History
// Date		Who	SDR		What
// 12Apr18  rjb         written 
/*

This program is for managing stock consigned to customers.
The problem with the existing functionality is that you can end up with muliple
consignment orders and it is very difficult to get visibility of what is ACTUALLY
in a customer's consignment warehouse.

This program supports a different approach:  Create a normal warehouse that is
physically on the customer site.  Do a stocktake in the normal manner.
Stock count variances represent the stock the customer has used and should be 
invoiced.

** NEVER POST THE STOCK TAKE!!!! **  (Because this program creates a sales
order for the differences so no GL update is required).

BEFORE posting the stock take (but after the counts have been entered and confirmed)
run this program.  

It will create an XML file of all the variances in format that looks like a 
customer sales order ready for importing via EDI. 

It will also flag the stock take as complete.  

*/
////////////////////////////////////////////////////////////////////////////////
 
#include "../include/i8secabt.spl"
#include "../include/i8proglog.spl"
#include "../include/m1enqdeb.spl"
 
field
	ws-function-title						type string

mode md-select
	prompt "Create Order"
mode md-lines
	prompt "View Lines"

procedure main
	get system-control first
	on error
		abort "No Control Record"
	endon
	do i8secabt-check-abort
		parameters are sys-consolidation-division login-id() "ZVG" "T008"
		returning ws-function-title 
	set ws-function-title = "Create Sales order from Stocktake"
	do i8proglog-write-log
	do select-stock-take
end-procedure


screen select-stock-take
	window
	title ws-function-title
	select * 
		from stock-take-control
		where stc-status = "F"
		and stc-whse-from = stc-whse-to // can't do range of warehouses
		order by stc-update-batch-ref desc
	data-grid occurs 20
	allowed search md-select md-lines
detail
	if screenmode = md-select
		do select-customer entry once parameters are stc-control-code
	endif
	if screenmode = md-lines
		do view-order parameter are stc-control-code
	endif
	accept stc-control-code @2,2
		title "Code"
		when screenmode = md-select
		show-value
	display stc-whse-from @2,4
		title "Whse"
	display stc-freeze-date @2,6
		title "Date"
	display stc-login-id @2,12
		title "User"
end-screen

screen select-customer
parameters
	lp-control-code						like stc-control-code
local
	lf-customer							like accountcode
	window  @1,1 to @5,30
		relative to @10,10
		window-position 4
	title "Enter Customer"
	no-ok-cancel
before
	get stock-take-control
		on index stc-control-code
		key is lp-control-code
	on error
	else
		select lf-customer = min(accountcode)
			from deb-master
			where warehouse = :stc-whse-from
		end-select
	endon
detail
	accept lf-customer @2,10
		title 'Customer'
		uppercase
		default lf-customer
	on help-key
		do m1enqdeb-enquire-on-debtors
			parameter lf-customer
			returning lf-customer
		re-enter optional
	endon
	validations
		get deb-master
			on index accountcode
			key is lf-customer 
		on error
			message-box param-text("<<P1>><<BR>><<p2>>"
				,"Invalid Customer Code"
				,"Try Help")
				title is ws-function-title
				message-buttons MSG_BOX_CANCEL
				icon MSG_BOX_STOP
			re-enter
		end-on
	end-validations
	confirm 
		prompt "Ok to Create Order?"
	confirmed
		do create-order parameters are lp-control-code lf-customer
	end-confirm
end-screen

procedure create-order
parameters
	lp-control-code						like stc-control-code
	lp-customer							like accountcode
local
	lf-doc								type xml-handle
	lf-root								type xml-handle
	lf-filename							pic x(1024) type string
	lf-lines							type xml-handle
	lf-line								type xml-handle
	lf-counter							type number
	lf-error-counter					type number
	//
	// Validate parameters
	//
	get stock-take-control
		on index stc-control-code
		key is lp-control-code
	on error
		exit 1
	endon
	get deb-master
		on index accountcode
		key is lp-customer
	on error
		exit 1
	endon
	//
	// Process stock-take
	//
	// Establish XML doc
	//
	set lf-doc = xml-new-document(spaces,"order")
	set lf-root = xml-get-root-node(lf-doc)
	if lf-root = 0
		message-box param-text("<<P1>><<BR>><<p2>>"
			,"Unable to access root node."
			,"No xml file created")
			title is ws-function-title
			message-buttons MSG_BOX_CANCEL
			icon MSG_BOX_STOP
		exit 1
	endif
	if xml-add-child-node-text(lf-root,"Customer",spaces,lp-customer) endif
	if xml-add-child-node-text(lf-root,"Whse",spaces,stc-whse-from) endif
	if xml-add-child-node-text(lf-root,"Date",spaces,format-picture(stc-freeze-date,"yyyymmdd")) endif
	if xml-add-child-node-text(lf-root,"Code",spaces,stc-control-code) endif
	set lf-lines = xml-add-child-node(lf-root,"lines",spaces) 
	if lf-lines = 0
		message-box param-text("<<P1>><<BR>><<p2>>"
			,"There was a problem adding the lines node to the xml file"
			,"No output file was created")
			title is ws-function-title
			message-buttons MSG_BOX_CANCEL
			icon MSG_BOX_STOP
		exit 1
	endif
	select *
		from stock-take-variance
		where stv-control-code = :lp-control-code
		and (stv-whse-qty - stv-count-qty) != 0
		order by stock-code
		database-sql
	detail
		set lf-counter += 1
		set lf-line =  xml-add-child-node(lf-lines,"line",spaces)
		if lf-line = 0
			set lf-error-counter += 1
		else
			if xml-add-child-node-text(lf-line,"stock_code",spaces,stock-code) endif
			if xml-add-child-node-text(lf-line,"qty",spaces,str(stv-whse-qty - stv-count-qty)) endif
			if xml-free-node-handle(lf-line) endif
		endif
	end-select
	//
	// report any errors.  Don't save the file if there are any errors.
	//
	if lf-error-counter > 0
		message-box param-text("<<P1>><<BR>><<p2>>"
			,concat("There were " str(lf-error-counter) " error(s) during the file build")
			,"No Output file was created")
			title is ws-function-title
			message-buttons MSG_BOX_CANCEL
			icon MSG_BOX_STOP
		exit 1
	endif
	//
	// save
	//
	do close-stock-take parameters are lp-control-code
	if exit-status = 0
		set lf-filename = concat("/tmp/consord_",lp-control-code,"_",str(pid),".xml")
		if not xml-save-as-file(lf-doc,lf-filename,spaces,2)
			message-box param-text("<<P1>><<BR>><<p2>>"
				,"File failed to save"
				,error-description(file-status))
				title is ws-function-title
				message-buttons MSG_BOX_CANCEL
				icon MSG_BOX_STOP
		else
			message-box param-text("<<P1>><<BR>><<p2>><<BR>><<p3>>"
				,lf-filename
				,"Successfully Created"
				,concat(str(lf-counter), " lines added")
				)
				title is ws-function-title
				message-buttons MSG_BOX_OK
				icon MSG_BOX_INFORMATION
		endif
	endif
end-procedure

screen view-order
parameters 	
	lp-control-code						like stc-control-code
local
	lf-qty								like stk-trans-qty
	window
	datagrid occurs 22
	select 
		t0.stock-code
		t1.stk-description
		lf-qty = stv-whse-qty - stv-count-qty
		from stock-take-variance as t0
		left join stock-master as t1 on t0.stock-code = t1.stock-code
		where stv-control-code = :lp-control-code
		and (stv-whse-qty - stv-count-qty) != 0
		order by t0.stock-code
	allowed search
detail
	accept stock-code @1,1
		title "Stock Code"
		when screenmode = search
		show-value
	display stk-description @1,2
		title "Description"
	display lf-qty @1,3
		title "Qty"
end-screen


procedure close-stock-take
parameters
	lp-control							like stv-control-code
local
	lf-commit							type boolean
	//
	set lf-commit = TRUE
	transaction begin
	get stock-take-control
		on index stc-control-code
		key is lp-control
		lock
	on error
		set lf-commit = FALSE
	else
		set stc-status = "U"
		update stock-take-control
		on error
			set lf-commit = FALSE
		endon
	endon
	select * from stock-take-variance
		where stv-control-code = :lp-control
		for update
	detail
		delete stock-take-variance
		on error
			set lf-commit = FALSE
		endon
	end-select
	if lf-commit 
		transaction commit
	else
		transaction rollback
		exit 1
	endif
end-procedure
